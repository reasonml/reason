/**
 * Testing Sequences.
 */
let result =
let twenty = 20;

let result = twenty;
result;;;

let result = let twenty = result; twenty;;

let anInt = result + 20;

let twenty = 20;

/**
 * Each of these are a sequence with a single item - they will be
 * printed in reduced form because sequences are a *parse* time construct.
 * To ensure these are parsed correctly, adding to an integer.
 */
let result = 0 + twenty;

let result = 0 + twenty;

let result = 0 + twenty;

let unitValue = ();

while (false) { unitValue };

while (false) { print_string("test" };

while (false) { print_string("test" };

type myRecord = {
  number: int,
};

let x = {number: 20};

let number = 20;

let cannotPunASingleFieldRecord = {number};

let fourty = 20 + todo Pexp_field;

let thisIsASequenceNotPunedRecord = number;

let fourty = 20 + thisIsASequenceNotPunedRecord;

type recordType = {
  a: int,
  b: int,
  c: int,
};

let a = 0;

let b = 0;

let c = 0;

let firstFieldPunned = {a, b, c};

let sndFieldPunned = {a, b, c};

let thirdFieldPunned = {a, b, c};

let singlePunAcceptedIfExtended = {a};
